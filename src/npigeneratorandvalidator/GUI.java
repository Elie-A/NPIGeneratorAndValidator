/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package npigeneratorandvalidator;

import javax.swing.JOptionPane;
import npigeneratorandvalidator.utils.NPIUtils;

/**
 *
 * @author elie.abdallah
 */
public class GUI extends javax.swing.JFrame {

    NPIUtils npiUtils;
    boolean npiListToValidate;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        npiUtils = new NPIUtils();
        validatedNPITxt.setText("Insert a list of NPIs separated by a line break or |");
        validatedNPITxt.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        generateNPITxt = new javax.swing.JTextArea();
        totalToGenerateTxt = new javax.swing.JSpinner();
        generateBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        validateBtn = new javax.swing.JButton();
        npiToValidateTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        validatedNPITxt = new javax.swing.JTextArea();
        listRadioBtn = new javax.swing.JRadioButton();
        singleRadioBtn = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(570, 375));
        setMinimumSize(new java.awt.Dimension(570, 375));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "NPI Generation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N
        jPanel1.setMaximumSize(new java.awt.Dimension(570, 580));
        jPanel1.setMinimumSize(new java.awt.Dimension(570, 580));
        jPanel1.setPreferredSize(new java.awt.Dimension(570, 580));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Total To Generate");

        generateNPITxt.setColumns(20);
        generateNPITxt.setRows(5);
        jScrollPane1.setViewportView(generateNPITxt);

        totalToGenerateTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        generateBtn.setText("Generate");
        generateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateBtnActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "NPI Validator", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        validateBtn.setText("Validate");
        validateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validateBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("NPI");

        validatedNPITxt.setColumns(20);
        validatedNPITxt.setRows(5);
        jScrollPane2.setViewportView(validatedNPITxt);

        buttonGroup1.add(listRadioBtn);
        listRadioBtn.setText("LIST");
        listRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listRadioBtnActionPerformed(evt);
            }
        });

        buttonGroup1.add(singleRadioBtn);
        singleRadioBtn.setText("SINGLE");
        singleRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleRadioBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(npiToValidateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(listRadioBtn)
                            .addComponent(singleRadioBtn)
                            .addComponent(validateBtn))))
                .addGap(25, 25, 25))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {listRadioBtn, singleRadioBtn});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(npiToValidateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(listRadioBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(singleRadioBtn)
                        .addGap(31, 31, 31)
                        .addComponent(validateBtn)
                        .addGap(0, 89, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(generateBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalToGenerateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(totalToGenerateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(generateBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateBtnActionPerformed
        generateNPITxt.setText("");
        int totalToGenerate = (Integer) totalToGenerateTxt.getValue();
        for (int i = 1; i <= totalToGenerate; i++) {
            String newNPI = npiUtils.generate();
            generateNPITxt.append(newNPI + "\n");
        }
    }//GEN-LAST:event_generateBtnActionPerformed

    private void validateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validateBtnActionPerformed
        if (!npiListToValidate) {
            String npiToValidate = npiToValidateTxt.getText().trim();
            boolean isValid = npiUtils.isValidNpi(npiToValidate);
            if (isValid) {
                JOptionPane.showMessageDialog(null, "VALID", "NPI Validation Satus", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "INVALID", "NPI Validation Satus", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            String listOfNPIs = validatedNPITxt.getText().trim();
            boolean areAllValid = true;
            StringBuilder nonValidNPIs = new StringBuilder("");
            if (listOfNPIs.contains("\\|")) {
                String npiList[] = listOfNPIs.split("\\|");
                for (String npiToValidate : npiList) {
                    boolean isValid = npiUtils.isValidNpi(npiToValidate);
                    if (!isValid) {
                        areAllValid = false;
                        nonValidNPIs.append(npiToValidate).append("\n");
                    }
                }
                if (!areAllValid) {
                    JOptionPane.showMessageDialog(null, "ALL NPIs are VALID", "NPI Validation Satus", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "INVALID NPIs are: " + nonValidNPIs.toString().trim(), "NPI Validation Satus", JOptionPane.INFORMATION_MESSAGE);
                }
            } else if (listOfNPIs.contains(System.getProperty("line.separator"))) {
                String npiList[] = listOfNPIs.split(System.getProperty("line.separator"));
                for (String npiToValidate : npiList) {
                    boolean isValid = npiUtils.isValidNpi(npiToValidate);
                    if (!isValid) {
                        areAllValid = false;
                        nonValidNPIs.append(npiToValidate).append("\n");
                    }
                }
                if (!areAllValid) {
                    JOptionPane.showMessageDialog(null, "ALL NPIs are VALID", "NPI Validation Satus", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "INVALID NPIs are: " + nonValidNPIs.toString().trim(), "NPI Validation Satus", JOptionPane.INFORMATION_MESSAGE);
                }
            } else if (listOfNPIs.contains("\n")) {
                String npiList[] = listOfNPIs.split("\n");
                for (String npiToValidate : npiList) {
                    boolean isValid = npiUtils.isValidNpi(npiToValidate);
                    if (!isValid) {
                        areAllValid = false;
                        nonValidNPIs.append(npiToValidate).append("\n");
                    }
                }
                if (areAllValid) {
                    JOptionPane.showMessageDialog(null, "ALL NPIs are VALID", "NPI Validation Satus", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "INVALID NPIs are: " + nonValidNPIs.toString().trim(), "NPI Validation Satus", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "INVALID NPIs List", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_validateBtnActionPerformed

    private void listRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listRadioBtnActionPerformed
        npiListToValidate = true;
        npiToValidateTxt.setEnabled(false);
        validatedNPITxt.setEnabled(true);
        validatedNPITxt.setText("");
    }//GEN-LAST:event_listRadioBtnActionPerformed

    private void singleRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleRadioBtnActionPerformed
        npiListToValidate = false;
        validatedNPITxt.setEnabled(false);
        npiToValidateTxt.setEnabled(true);
        validatedNPITxt.setText("Insert a list of NPIs separated by a line break or |");
    }//GEN-LAST:event_singleRadioBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton generateBtn;
    private javax.swing.JTextArea generateNPITxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton listRadioBtn;
    private javax.swing.JTextField npiToValidateTxt;
    private javax.swing.JRadioButton singleRadioBtn;
    private javax.swing.JSpinner totalToGenerateTxt;
    private javax.swing.JButton validateBtn;
    private javax.swing.JTextArea validatedNPITxt;
    // End of variables declaration//GEN-END:variables
}
